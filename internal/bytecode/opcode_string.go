// Code generated by "stringer -type=OpCode"; DO NOT EDIT.

package bytecode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OP_CONSTANT-0]
	_ = x[OP_TRUE-1]
	_ = x[OP_FALSE-2]
	_ = x[OP_NIL-3]
	_ = x[OP_CONSTANT_M1-4]
	_ = x[OP_CONSTANT_0-5]
	_ = x[OP_CONSTANT_1-6]
	_ = x[OP_CONSTANT_2-7]
	_ = x[OP_CONSTANT_3-8]
	_ = x[OP_CONSTANT_4-9]
	_ = x[OP_CONSTANT_5-10]
	_ = x[OP_NEGATE-11]
	_ = x[OP_NOT-12]
	_ = x[OP_ADD-13]
	_ = x[OP_SUBTRACT-14]
	_ = x[OP_MULTIPLY-15]
	_ = x[OP_DIVIDE-16]
	_ = x[OP_EQUAL-17]
	_ = x[OP_NOT_EQUAL-18]
	_ = x[OP_GREATER-19]
	_ = x[OP_LESS-20]
	_ = x[OP_GREATER_EQUAL-21]
	_ = x[OP_LESS_EQUAL-22]
	_ = x[OP_RETURN-23]
	_ = x[OP_POP-24]
	_ = x[OP_PRINT-25]
}

const _OpCode_name = "OP_CONSTANTOP_TRUEOP_FALSEOP_NILOP_CONSTANT_M1OP_CONSTANT_0OP_CONSTANT_1OP_CONSTANT_2OP_CONSTANT_3OP_CONSTANT_4OP_CONSTANT_5OP_NEGATEOP_NOTOP_ADDOP_SUBTRACTOP_MULTIPLYOP_DIVIDEOP_EQUALOP_NOT_EQUALOP_GREATEROP_LESSOP_GREATER_EQUALOP_LESS_EQUALOP_RETURNOP_POPOP_PRINT"

var _OpCode_index = [...]uint16{0, 11, 18, 26, 32, 46, 59, 72, 85, 98, 111, 124, 133, 139, 145, 156, 167, 176, 184, 196, 206, 213, 229, 242, 251, 257, 265}

func (i OpCode) String() string {
	if i >= OpCode(len(_OpCode_index)-1) {
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OpCode_name[_OpCode_index[i]:_OpCode_index[i+1]]
}
